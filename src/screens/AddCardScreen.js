import React, { useState } from "react";
import { View, Text, TextInput, Button, Alert, StyleSheet } from "react-native";

const API_URL = "http://192.168.128.149:8000/cards";

export default function AddCardScreen({ navigation }) {
  const [name, setName] = useState("");
  const [attack, setAttack] = useState("");
  const [defense, setDefense] = useState("");

  // üõ† H√†m g·ª≠i th·∫ª b√†i l√™n API
  const addNewCard = async () => {
    if (!name.trim()) {
      Alert.alert("L·ªói", "T√™n th·∫ª kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!");
      return;
    }

    const attackValue = parseInt(attack);
    const defenseValue = parseInt(defense);

    if (isNaN(attackValue) || isNaN(defenseValue)) {
      Alert.alert("L·ªói", "Gi√° tr·ªã t·∫•n c√¥ng v√† ph√≤ng th·ªß ph·∫£i l√† s·ªë!");
      return;
    }

    if (attackValue < 0 || attackValue > 10 || defenseValue < 0 || defenseValue > 10) {
      Alert.alert("L·ªói", "Gi√° tr·ªã t·∫•n c√¥ng v√† ph√≤ng th·ªß ph·∫£i t·ª´ 0 ƒë·∫øn 10!");
      return;
    }

    const newCard = { name: name.trim(), attack: attackValue, defense: defenseValue };

    try {
      const response = await fetch(API_URL, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(newCard),
      });

      if (response.ok) {
        Alert.alert("Th√†nh c√¥ng", "Th·∫ª b√†i ƒë√£ ƒë∆∞·ª£c th√™m!", [
          { text: "OK", onPress: () => navigation.goBack() }, // üîÑ Quay l·∫°i v√† c·∫≠p nh·∫≠t danh s√°ch
        ]);
      } else {
        Alert.alert("L·ªói", "Kh√¥ng th·ªÉ th√™m th·∫ª b√†i!");
      }
    } catch (error) {
      Alert.alert("L·ªói", "Kh√¥ng th·ªÉ k·∫øt n·ªëi v·ªõi m√°y ch·ªß!");
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Th√™m Th·∫ª B√†i M·ªõi</Text>
      <TextInput style={styles.input} placeholder="T√™n th·∫ª" value={name} onChangeText={setName} />
      <TextInput style={styles.input} placeholder="T·∫•n c√¥ng" value={attack} onChangeText={setAttack} keyboardType="numeric" />
      <TextInput style={styles.input} placeholder="Ph√≤ng th·ªß" value={defense} onChangeText={setDefense} keyboardType="numeric" />
      <Button title="Th√™m Th·∫ª" onPress={addNewCard} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: "center", alignItems: "center", backgroundColor: "#1a1a1a", padding: 20 },
  title: { fontSize: 20, fontWeight: "bold", color: "#fff", marginBottom: 20 },
  input: { backgroundColor: "#fff", width: 200, padding: 10, marginVertical: 5, borderRadius: 5 },
});
